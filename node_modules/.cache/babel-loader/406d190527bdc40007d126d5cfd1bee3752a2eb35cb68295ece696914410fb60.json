{"ast":null,"code":"var _jsxFileName = \"/Users/choseunghu/Desktop/react/react-disney-app/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport axios from '../api/axios';\nimport { useEffect, useState } from 'react';\nimport requests from '../api/requests';\nimport \"./Banner.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [movie, setMovie] = useState(undefined);\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보 가져오기\n    const response = await axios.get(requests.fetchNowPlaying);\n    console.log(response);\n\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieId = response.data.results[Math.floor(Math.random() * response.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substring(0, n) + \"...\" : str;\n  };\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  if (!isClicked) {\n    var _movie$videos, _movie$videos$results;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: movie.title || movie.name || movie.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: (_movie$videos = movie.videos) !== null && _movie$videos !== void 0 && (_movie$videos$results = _movie$videos.results[0]) !== null && _movie$videos$results !== void 0 && _movie$videos$results.key ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBotton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(HomeContainer, {\n          children: /*#__PURE__*/_jsxDEV(Iframe, {\n            src: `https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1`,\n            width: \"640\",\n            height: \"360\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsClicked(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(Banner, \"tsXDKUFnZANt+CiDQ283VV60+gk=\");\n_c = Banner;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n_c2 = Container;\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n_c3 = HomeContainer;\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n_c4 = Iframe;\nexport default Banner;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"HomeContainer\");\n$RefreshReg$(_c4, \"Iframe\");","map":{"version":3,"names":["axios","useEffect","useState","requests","styled","Banner","movie","setMovie","undefined","isClicked","setIsClicked","fetchData","response","get","fetchNowPlaying","console","log","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substring","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","title","name","original_name","videos","key","overview","Container","div","HomeContainer","Iframe","iframe"],"sources":["/Users/choseunghu/Desktop/react/react-disney-app/src/components/Banner.js"],"sourcesContent":["import axios from '../api/axios'\nimport { useEffect, useState } from 'react'\nimport requests from '../api/requests'\nimport \"./Banner.css\"\nimport styled from 'styled-components'\n\nfunction Banner() {\n\n  const [movie, setMovie] = useState(undefined)\n  const [isClicked, setIsClicked] = useState(false)\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보 가져오기\n    const response = await axios.get(requests.fetchNowPlaying)\n    console.log(response)\n\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieId = response.data.results[\n      Math.floor(Math.random() * response.data.results.length)\n    ].id\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\n      params: { append_to_response: \"videos\" },\n    })\n    setMovie(movieDetail)\n  }\n\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substring(0, n) + \"...\" : str;\n  }\n\n  if(!movie) return <div>loading...</div>\n\n  if(!isClicked) {\n    return (\n      <header \n      className='banner' \n      style={{\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\",\n    }}>\n      <div className='banner__contents'>\n        <h1 className='banner__title'>\n          {movie.title || movie.name || movie.original_name}\n        </h1>\n\n        <div className='banner__buttons'>\n          {movie.videos?.results[0]?.key ?\n            <button\n              className='banner__button play'\n              onClick={() => setIsClicked(true)}\n            >\n              Play\n            </button>\n            :\n            null\n          }\n        </div>\n        <h5 className='banner__description'>\n          {truncate(movie.overview, 100)}\n        </h5>\n      </div>\n      <div className='banner--fadeBotton' />\n    </header>\n    )\n  } else {\n    return (\n      <>\n        <Container>\n          <HomeContainer>\n            <Iframe\n              src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1`}\n              width=\"640\"\n              height=\"360\"\n              ></Iframe>\n          </HomeContainer>\n        </Container>\n        <button onClick={() => setIsClicked(false)}>\n          X\n        </button>\n      </>\n    )\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`\n\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport default Banner\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}